
///////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	ВерсияПриложения = СистемнаяИнформация.ВерсияПриложения;
	
	// Получение информации о размере таблиц самой платформой доступна с 8.3.15
	Если Лев(ВерсияПриложения, 4) = "8.3." Тогда
		ВерсияПриложения = Сред(ВерсияПриложения, 5);
		// А вот СтрНайти() может не дать запустить обработку
		ПозицияТочки = Найти(ВерсияПриложения, ".");
		
		ТипЧисло = Новый ОписаниеТипов("Число");
		НомерРелиза = ТипЧисло.ПривестиЗначение(Лев(ВерсияПриложения, ПозицияТочки - 1));
		Если НомерРелиза >= 15 Тогда
			fast8ДоступноПолучениеРазмераДанных = Истина;
		КонецЕсли;
	КонецЕсли;
	
	fast8ДоступноПолучениеРазмераДанных = Ложь; // На данный момент метод ооооочень тормозной, поэтому получение размеров заблокировано
	
	Если Не fast8ДоступноПолучениеРазмераДанных Тогда
		Элементы.fast8РезультатРазмер.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура fast8ПровестиАнализ(Команда)
	
	ПровестиАнализНаСервере();
	
КонецПроцедуры // fast8ПровестиАнализ()

&НаКлиенте
Процедура fast8РезультатВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "fast8РезультатКоличество" Тогда
		ПерейтиКСписку();
	ИначеЕсли Поле.Имя = "fast8РезультатИмяТаблицы" Тогда
		ОткрытьФормуСтруктурыХранения();
	ИначеЕсли Поле.Имя = "fast8РезультатИмяОбъекта" Тогда
		ОткрытьФормуОбъектаМетаданных();
	КонецЕсли;
	
КонецПроцедуры // fast8РезультатВыбор()

&НаКлиенте
Процедура fast8ИнформацияОРазмереТаблиц(Команда)
	
	ОткрытьФорму("ВнешняяОбработка.FAST8BasesTablesAnalitics.Форма.fast8ИнформацияОРазмереТаблиц",, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры // fast8ИнформацияОРазмереТаблиц()

&НаКлиенте
Процедура fast8ОбъектМетаданных(Команда)
	
	ОткрытьФормуОбъектаМетаданных();
	
КонецПроцедуры // fast8ОбъектМетаданных()

&НаКлиенте
Процедура fast8СтруктураХранения(Команда)
	
	ОткрытьФормуСтруктурыХранения();
	
КонецПроцедуры // fast8СтруктураХранения()

&НаКлиенте
Процедура fast8ПерейтиКСписку(Команда)
	
	ПерейтиКСписку();
	
КонецПроцедуры // fast8ПерейтиКСписку()

&НаКлиенте
Процедура fast8ГрафикНаполненияПоПериоду(Команда)
	
	ОткрытьДополнительнуюФорму("fast8СтатистикаПоПериодам");
	
КонецПроцедуры // fast8ГрафикНаполненияПоПериоду()

&НаКлиенте
Процедура fast8РезультатПриАктивизацииСтроки(Элемент)
	
	Элементы.fast8РезультатКонтекстноеМенюfast8ОбъектМетаданных.Доступность				= Ложь;
	Элементы.fast8РезультатКонтекстноеМенюfast8СтруктураХранения.Доступность			= Ложь;
	Элементы.fast8РезультатКонтекстноеМенюfast8ПерейтиКСписку.Доступность				= Ложь;
	Элементы.fast8РезультатКонтекстноеМенюfast8ГрафикНаполненияПоПериоду.Доступность	= Ложь;
	Элементы.fast8РезультатКонтекстноеМенюfast8РазмерыФайловБСП.Доступность				= Ложь;
	
	ТекущиеДанные = Элементы.fast8Результат.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		Для Каждого ЭлементСписка Из ТекущиеДанные.ДоступныеКоманды Цикл
			Элементы["fast8РезультатКонтекстноеМеню" + ЭлементСписка.Значение].Доступность = Истина;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // fast8РезультатПриАктивизацииСтроки()

&НаКлиенте
Процедура fast8РазмерыФайловБСП(Команда)
	
	ОткрытьДополнительнуюФорму("fast8ИнформацияОРазмереФайловБСП");
	
КонецПроцедуры // fast8РазмерыФайловБСП()


///////////////////////////////////////////////////////////////////////////////
// ОСНОВНЫЕ ФУНКЦИИ

&НаКлиенте
Процедура ОткрытьФормуОбъектаМетаданных()
	
	ОткрытьДополнительнуюФорму("fast8ИнформацияОбОбъектеМетаданных");
	
КонецПроцедуры // ОткрытьФормуОбъектаМетаданных()

&НаКлиенте
Процедура ОткрытьФормуСтруктурыХранения()
	
	ОткрытьДополнительнуюФорму("fast8ИнформацияОСтруктуреХранения");
	
КонецПроцедуры // ОткрытьФормуСтруктурыХранения()

&НаКлиенте
Процедура ПерейтиКСписку()
	
	ТекущиеДанные = Элементы.fast8Результат.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.Расшифровка) Тогда
			ПерейтиПоНавигационнойСсылке(ТекущиеДанные.Расшифровка);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ПерейтиКСписку()

&НаКлиенте
Процедура ОткрытьДополнительнуюФорму(ИмяДополнительнойФормы)
	
	ТекущиеДанные = Элементы.fast8Результат.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.ИмяОбъекта) Тогда
			ПараметрыОткрытия = Новый Структура("ПолноеИмяМетаданных", ТекущиеДанные.ПолноеИмяМетаданного);
			ОткрытьФорму("ВнешняяОбработка.FAST8BasesTablesAnalitics.Форма." + ИмяДополнительнойФормы, ПараметрыОткрытия, ЭтаФорма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ОткрытьДополнительнуюФорму()

&НаСервере
Процедура ПровестиАнализНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	fast8Результат.ПолучитьЭлементы().Очистить();
	
	ТаблицаМетаданных = ПолучитьСтруктуруХраненияБазыДанных();
	ТаблицаМетаданных.Индексы.Добавить("ИмяТаблицы, Назначение");
			
	МетаГруппы = Новый Структура;
	МетаГруппы.Вставить("Справочники",				"Справочник.");
	МетаГруппы.Вставить("Документы",				"Документ.");
	МетаГруппы.Вставить("ПланыСчетов",				"ПланСчетов.");
	МетаГруппы.Вставить("ПланыВидовХарактеристик",	"ПланВидовХарактеристик.");
	МетаГруппы.Вставить("ПланыВидовРасчета",		"ПланВидовРасчета.");
	МетаГруппы.Вставить("РегистрыСведений",			"РегистрСведений.");
	МетаГруппы.Вставить("РегистрыНакопления",		"РегистрНакопления.");
	МетаГруппы.Вставить("РегистрыБухгалтерии",		"РегистрБухгалтерии.");
	МетаГруппы.Вставить("РегистрыРасчета",			"РегистрРасчета.");
	МетаГруппы.Вставить("ПланыОбмена",				"ПланОбмена.");
	МетаГруппы.Вставить("БизнесПроцессы",			"БизнесПроцесс.");
	МетаГруппы.Вставить("Задачи",					"Задача.");
	МетаГруппы.Вставить("Константы",				"Константа.");
	
	Если Метаданные.Перечисления.Найти("ТипыХраненияФайлов") <> Неопределено И Метаданные.РегистрыСведений.Найти("ДвоичныеДанныеФайлов") <> Неопределено Тогда
		ЕстьПодсистемаХраненияБСП = Истина;
	Иначе
		ЕстьПодсистемаХраненияБСП = Ложь;
	КонецЕсли;
	
	Для Каждого МетаГруппа Из МетаГруппы Цикл 
		НоваяГруппировка = fast8Результат.ПолучитьЭлементы().Добавить();
		НоваяГруппировка.Группировка = МетаГруппа.Ключ + " (" + Метаданные[МетаГруппа.Ключ].Количество() + ")";
		
		Для Каждого МетаОбъект Из Метаданные[МетаГруппа.Ключ] Цикл 
			
			ПолноеИмяМетаданного = МетаГруппа.Значение + МетаОбъект.Имя;
			
			////////////////
			//ОСНОВНОЕ
			//
			
			НоваяСтрока = НоваяГруппировка.ПолучитьЭлементы().Добавить();
			НоваяСтрока.Группировка = МетаГруппа.Ключ;
			НоваяСтрока.ИмяОбъекта	= МетаОбъект.Имя;
			НоваяСтрока.Синоним		= МетаОбъект.Синоним;
			НоваяСтрока.ПолноеИмяМетаданного = ПолноеИмяМетаданного;
			Если Не МетаГруппа.Ключ = "Константы" Тогда
				НоваяСтрока.Расшифровка = "e1cib/list/" + ПолноеИмяМетаданного;
			КонецЕсли;
			
			////////////////
			//КОЛИЧЕСТВО
			//
			
			Если МетаГруппа.Ключ = "Константы" Тогда
				КоличествоЭлементов = 1;
				КоличествоПомеченныхНаУдаление = 0;
			Иначе				
				
				Запрос = Новый Запрос;
				Запрос.Текст =
				"ВЫБРАТЬ
				|	СУММА(РасчетКоличества.КоличествоЭлементов) КАК КоличествоЭлементов,
				|	СУММА(РасчетКоличества.КоличествоПомеченныхНаУдаление) КАК КоличествоПомеченныхНаУдаление
				|ИЗ
				|	(ВЫБРАТЬ
				|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК КоличествоЭлементов,
				|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК КоличествоПомеченныхНаУдаление // КОМАНДА СУБД УВЕЛИЧИТЬ РАЗМЕРНОСТЬ ЧИСЕЛ
				|	
				|	ОБЪЕДИНИТЬ ВСЕ
				|	
				|	ВЫБРАТЬ
				|		1,
				|		-1
				|	ИЗ
				|		" + ПолноеИмяМетаданного + " КАК Таблица) КАК РасчетКоличества";
				
				Если СтрокаНачинаетсяС(МетаГруппа.Ключ, "Регистр") Тогда
					ШаблонЗамены = "0";
				Иначе
					ШаблонЗамены = "ВЫБОР КОГДА ПометкаУдаления ТОГДА 1 ИНАЧЕ 0 КОНЕЦ";
				КонецЕсли;
				Запрос.Текст = СтрЗаменить(Запрос.Текст, "-1", ШаблонЗамены);
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда 
					КоличествоЭлементов = ?(Выборка.КоличествоЭлементов = Null, 0, Выборка.КоличествоЭлементов);
					КоличествоПомеченныхНаУдаление = ?(Выборка.КоличествоПомеченныхНаУдаление = Null, 0, Выборка.КоличествоПомеченныхНаУдаление);
				Иначе
					КоличествоЭлементов = 0;
					КоличествоПомеченныхНаУдаление = 0;
				КонецЕсли;
			КонецЕсли;
			
			НоваяСтрока.Количество	= КоличествоЭлементов;
			НоваяСтрока.ПомеченныхНаУдаление = КоличествоПомеченныхНаУдаление;
												
			////////////////
			//СТРУКТУРА БД
			//
			
			СтрокиТаблицБД = ТаблицаМетаданных.НайтиСтроки(Новый Структура("ИмяТаблицы, Назначение", ПолноеИмяМетаданного, ?(МетаГруппа.Ключ = "Константы", "Константа", "Основная")));
			Если СтрокиТаблицБД.Количество() Тогда
				НоваяСтрока.ИмяТаблицы = СтрокиТаблицБД.Получить(0).ИмяТаблицыХранения;				
			КонецЕсли;
			Если fast8ДоступноПолучениеРазмераДанных Тогда
				МассивМетаданных = Новый Массив;
				МассивМетаданных.Добавить(ПолноеИмяМетаданного);
				// На ранних версиях платформы обработка не запустится из-за отсутствия платформенного метода
				Выполнить "НоваяСтрока.Размер = ПолучитьРазмерДанныхБазыДанных(, МассивМетаданных) / 1024 / 1024;";
			КонецЕсли;
			
			////////////////
			//КОМАНДЫ СПИСКА
			//
			
			НоваяСтрока.ДоступныеКоманды.Добавить("fast8ОбъектМетаданных");
			НоваяСтрока.ДоступныеКоманды.Добавить("fast8СтруктураХранения");
			Если Не МетаГруппа.Ключ = "Константы" Тогда
				НоваяСтрока.ДоступныеКоманды.Добавить("fast8ПерейтиКСписку");
			КонецЕсли;
			
			ДоступенГрафикПоПериоду = Ложь;
			Если МетаГруппа.Ключ = "Документы" Тогда
				ДоступенГрафикПоПериоду = Истина;
			ИначеЕсли МетаГруппа.Ключ = "РегистрыСведений" Тогда
				Если Не МетаОбъект.ПериодичностьРегистраСведений = Метаданные.СвойстваОбъектов.ПериодичностьРегистраСведений.Непериодический Тогда
					ДоступенГрафикПоПериоду = Истина;
				КонецЕсли;
			ИначеЕсли МетаГруппа.Ключ = "РегистрыНакопления" Тогда
				ДоступенГрафикПоПериоду = Истина;
			ИначеЕсли МетаГруппа.Ключ = "РегистрыБухгалтерии" Тогда
				ДоступенГрафикПоПериоду = Истина;
			ИначеЕсли МетаГруппа.Ключ = "РегистрыРасчета" Тогда
				ДоступенГрафикПоПериоду = Истина;
			ИначеЕсли МетаГруппа.Ключ = "БизнесПроцессы" Тогда
				ДоступенГрафикПоПериоду = Истина;
			ИначеЕсли МетаГруппа.Ключ = "Задачи" Тогда
				ДоступенГрафикПоПериоду = Истина;
			КонецЕсли;
			
			Если ДоступенГрафикПоПериоду Тогда
				НоваяСтрока.ДоступныеКоманды.Добавить("fast8ГрафикНаполненияПоПериоду");
			КонецЕсли;
			
			Если ЕстьПодсистемаХраненияБСП Тогда
				Если МетаГруппа.Ключ = "Справочники" И МетаОбъект.Реквизиты.Найти("Размер") <> Неопределено И МетаОбъект.Реквизиты.Найти("ТипХраненияФайла") <> Неопределено
					И МетаОбъект.Реквизиты.Найти("ВладелецФайла") <> Неопределено Или ПолноеИмяМетаданного = "РегистрСведений.ДвоичныеДанныеФайлов" Тогда
					НоваяСтрока.ДоступныеКоманды.Добавить("fast8РазмерыФайловБСП");
				КонецЕсли;
			КонецЕсли;
			
			////////////////
			//ПРИНАДЛЕЖНОСТЬ
			//
			
			НоваяСтрока.Принадлежность = "Конфигурация";
			Если МетаОбъект.РасширениеКонфигурации() = Неопределено Тогда
				Если МетаОбъект.ЕстьИзмененияРасширениямиКонфигурации() Тогда
					НоваяСтрока.Принадлежность = "Изменено в расширении";
				КонецЕсли;
			Иначе
				НоваяСтрока.Принадлежность = "Объект расширения";
			КонецЕсли;
			
		КонецЦикла;		
	КонецЦикла;
	
КонецПроцедуры // ПровестиАнализНаСервере()

Функция СтрокаНачинаетсяС(ИсходнаяСтрока, Вхождение)
	
	// СтрНачинаетсяС стала доступна в режиме совместимости 8.3.6, легаси-базы тоже должны работать
	
	Возврат (Лев(ИсходнаяСтрока, СтрДлина(Вхождение)) = Вхождение);
	
КонецФункции // СтрокаНачинаетсяС()
