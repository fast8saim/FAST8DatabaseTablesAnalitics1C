
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПолноеИмяМетаданных", fast8ПолноеИмяМетаданных);
	
	Если Не ЗначениеЗаполнено(fast8ПолноеИмяМетаданных) Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
	Иначе
		ЗаполнитьГрафик();
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаСервере
Процедура ЗаполнитьГрафик()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Если СтрокаНачинаетсяС(fast8ПолноеИмяМетаданных, "Документ") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетКоличества.Месяц КАК Месяц,
		|	СУММА(РасчетКоличества.Проведенные) КАК Проведенные,
		|	СУММА(РасчетКоличества.НеПроведенные) КАК НеПроведенные,
		|	СУММА(РасчетКоличества.ПомеченныеНаУдаление) КАК ПомеченныеНаУдаление
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДАТАВРЕМЯ(2020, 1, 1) КАК Месяц,
		|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК Проведенные,
		|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК НеПроведенные,
		|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК ПомеченныеНаУдаление
		|	ГДЕ
		|		ЛОЖЬ // КОМАНДА СУБД УВЕЛИЧИТЬ РАЗМЕРНОСТЬ ЧИСЕЛ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(Таблица.Дата, МЕСЯЦ),
		|		ВЫБОР
		|			КОГДА Таблица.Проведен
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПометкаУдаления
		|					И НЕ Таблица.Проведен
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА Таблица.ПометкаУдаления
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		" + fast8ПолноеИмяМетаданных + " КАК Таблица) КАК РасчетКоличества
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетКоличества.Месяц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Месяц";
		
		СерияПроведенные			= fast8График.Серии.Добавить("Проведенные");
		СерияНеПроведенные			= fast8График.Серии.Добавить("Не проведенные");
		СерияПомеченныеНаУдаление	= fast8График.Серии.Добавить("Помеченные на удаление");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяТочка = fast8График.Точки.Добавить(Формат(Выборка.Месяц, "ДФ='ММММ гггг'"));
			fast8График.УстановитьЗначение(НоваяТочка, СерияПроведенные,			Выборка.Проведенные);
			fast8График.УстановитьЗначение(НоваяТочка, СерияНеПроведенные,			Выборка.НеПроведенные);
			fast8График.УстановитьЗначение(НоваяТочка, СерияПомеченныеНаУдаление,	Выборка.ПомеченныеНаУдаление);
		КонецЦикла;
		
	ИначеЕсли СтрокаНачинаетсяС(fast8ПолноеИмяМетаданных, "Регистр") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетКоличества.Месяц КАК Месяц,
		|	СУММА(РасчетКоличества.Количество) КАК Количество
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДАТАВРЕМЯ(2020, 1, 1) КАК Месяц,
		|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК Количество
		|	ГДЕ
		|		ЛОЖЬ // КОМАНДА СУБД УВЕЛИЧИТЬ РАЗМЕРНОСТЬ ЧИСЕЛ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(Таблица.Период, МЕСЯЦ),
		|		1
		|	ИЗ
		|		" + fast8ПолноеИмяМетаданных + " КАК Таблица) КАК РасчетКоличества
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетКоличества.Месяц
		|
		|УПОРЯДОЧИТЬ ПО
		|	РасчетКоличества.Месяц";
		
		Если СтрокаНачинаетсяС(fast8ПолноеИмяМетаданных, "РегистрРасчета") Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, ".Период", ".ПериодРегистрации");
		КонецЕсли;
		
		СерияКоличество	= fast8График.Серии.Добавить("Количество");
				
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяТочка = fast8График.Точки.Добавить(Формат(Выборка.Месяц, "ДФ='ММММ гггг'"));
			fast8График.УстановитьЗначение(НоваяТочка, СерияКоличество, Выборка.Количество);
		КонецЦикла;
		
	ИначеЕсли СтрокаНачинаетсяС(fast8ПолноеИмяМетаданных, "БизнесПроцесс") Или СтрокаНачинаетсяС(fast8ПолноеИмяМетаданных, "Задача") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РасчетКоличества.Месяц КАК Месяц,
		|	СУММА(РасчетКоличества.Количество) КАК Количество,
		|	СУММА(РасчетКоличества.ПомеченныеНаУдаление) КАК ПомеченныеНаУдаление
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДАТАВРЕМЯ(2020, 1, 1) КАК Месяц,
		|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК Количество,
		|		ВЫРАЗИТЬ(0 КАК ЧИСЛО(30, 0)) КАК ПомеченныеНаУдаление
		|	ГДЕ
		|		ЛОЖЬ // КОМАНДА СУБД УВЕЛИЧИТЬ РАЗМЕРНОСТЬ ЧИСЕЛ
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		НАЧАЛОПЕРИОДА(Таблица.Дата, МЕСЯЦ),
		|		ВЫБОР
		|			КОГДА НЕ Таблица.ПометкаУдаления
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВЫБОР
		|			КОГДА Таблица.ПометкаУдаления
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ
		|	ИЗ
		|		" + fast8ПолноеИмяМетаданных + " КАК Таблица) КАК РасчетКоличества
		|
		|СГРУППИРОВАТЬ ПО
		|	РасчетКоличества.Месяц
		|
		|УПОРЯДОЧИТЬ ПО
		|	Месяц";
		
		СерияКоличество				= fast8График.Серии.Добавить("Количество");
		СерияПомеченныеНаУдаление	= fast8График.Серии.Добавить("Помеченные на удаление");
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			НоваяТочка = fast8График.Точки.Добавить(Формат(Выборка.Месяц, "ДФ='ММММ гггг'"));
			fast8График.УстановитьЗначение(НоваяТочка, СерияКоличество,				Выборка.Количество);
			fast8График.УстановитьЗначение(НоваяТочка, СерияПомеченныеНаУдаление,	Выборка.ПомеченныеНаУдаление);
		КонецЦикла;	
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьГрафик()

Функция СтрокаНачинаетсяС(ИсходнаяСтрока, Вхождение)
	
	// СтрНачинаетсяС
	
	Возврат (Лев(ИсходнаяСтрока, СтрДлина(Вхождение)) = Вхождение);
	
КонецФункции // СтрокаНачинаетсяС()