// MIT License
//
// Copyright (c) 2023 FAST8.RU
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПолноеИмяМетаданных", fast8ПолноеИмяМетаданных);
	
	Если Не ЗначениеЗаполнено(fast8ПолноеИмяМетаданных) Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
	Иначе
		ЗаполнитьХранение();
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьХранение()
	
	fast8Хранение.Очистить();
	
	УстановитьПривилегированныйРежим(Истина);
	МетаданныеСсылки = Метаданные.НайтиПоПолномуИмени(fast8ПолноеИмяМетаданных);
	ОбъектыМетаданных = Новый Массив;
	ОбъектыМетаданных.Добавить(МетаданныеСсылки);	
	
	ТаблицаСУБД = ПолучитьСтруктуруХраненияБазыДанных(ОбъектыМетаданных);
	
	МакетХранение = РеквизитФормыВЗначение("Объект").ПолучитьМакет("fast8МакетХранение");
	ОбластьОсновнаяГруппировка = МакетХранение.ПолучитьОбласть("ОсновнаяГруппировка");
	ОбластьПоляГруппировка = МакетХранение.ПолучитьОбласть("ПоляГруппировка");
	ОбластьИндексыЗаголовок = МакетХранение.ПолучитьОбласть("ИндексыЗаголовок");
	ОбластьИндексыПоляГруппировка = МакетХранение.ПолучитьОбласть("ИндексыПоляГруппировка");
			
	fast8Хранение.СохранятьСвойстваОтображения = Истина;
	fast8Хранение.НачатьАвтогруппировкуСтрок();
	Для Каждого СтрокаТЧ Из ТаблицаСУБД Цикл
		fast8Хранение.Вывести(ОбластьОсновнаяГруппировка, 0);
		ОбластьСтрока = МакетХранение.ПолучитьОбласть("ОсновнаяСтрока");
		ОбластьСтрока.Параметры.Заполнить(СтрокаТЧ);
		fast8Хранение.Вывести(ОбластьСтрока);
		
		fast8Хранение.Вывести(ОбластьПоляГруппировка, 1);
		Для Каждого СтрокаПоле Из СтрокаТЧ.Поля Цикл			
			ОбластьСтрока = МакетХранение.ПолучитьОбласть("ПоляСтрока");
			ОбластьСтрока.Параметры.Заполнить(СтрокаПоле);
			fast8Хранение.Вывести(ОбластьСтрока, 1);
		КонецЦикла;
		
		fast8Хранение.Вывести(ОбластьИндексыЗаголовок, 1);
		Для Каждого СтрокаИндекс Из СтрокаТЧ.Индексы Цикл			
			ОбластьИндексыГруппировка = МакетХранение.ПолучитьОбласть("ИндексыГруппировка");
			ОбластьИндексыГруппировка.Параметры.Заполнить(СтрокаИндекс);
			fast8Хранение.Вывести(ОбластьИндексыГруппировка, 1);
			
			fast8Хранение.Вывести(ОбластьИндексыПоляГруппировка, 2);
			Для Каждого СтрокаИндексПоле Из СтрокаИндекс.Поля Цикл
				ОбластьСтрока = МакетХранение.ПолучитьОбласть("ИндексыПоляСтрока");
				ОбластьСтрока.Параметры.Заполнить(СтрокаИндексПоле);
				fast8Хранение.Вывести(ОбластьСтрока, 2);
			КонецЦикла;
		КонецЦикла;		
	КонецЦикла;
	fast8Хранение.Вывести(МакетХранение.ПолучитьОбласть("ПустаяСтрока"), 0);
	fast8Хранение.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры // ЗаполнитьХранение()

#КонецОбласти // СлужебныеПроцедурыИФункции
