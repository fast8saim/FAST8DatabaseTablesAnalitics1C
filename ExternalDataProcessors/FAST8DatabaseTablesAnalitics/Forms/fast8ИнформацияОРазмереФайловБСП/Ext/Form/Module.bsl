// MIT License
//
// Copyright (c) 2023 FAST8.RU
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ПолноеИмяМетаданных", fast8ПолноеИмяМетаданных);
	
	Если Не ЗначениеЗаполнено(fast8ПолноеИмяМетаданных) Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
	Иначе
		ЗаполнитьРазмерыФайлов();
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

#КонецОбласти // ОбработчикиСобытийФормы

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРазмерыФайлов()
	
	fast8РазмерыФайлов.Очистить();
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Если СтрокаНачинаетсяС(fast8ПолноеИмяМетаданных, "Справочник") Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТИПЗНАЧЕНИЯ(Таблица.Ссылка) КАК Объект,
		|	СУММА(ВЫБОР
		|			КОГДА Таблица.ТипХраненияФайла = ЗНАЧЕНИЕ(Перечисление.ТипыХраненияФайлов.ВИнформационнойБазе)
		|				ТОГДА Таблица.Размер
		|			ИНАЧЕ 0
		|		КОНЕЦ) / 1048576 КАК РазмерВБазе,
		|	СУММА(ВЫБОР
		|			КОГДА Таблица.ТипХраненияФайла = ЗНАЧЕНИЕ(Перечисление.ТипыХраненияФайлов.ВТомахНаДиске)
		|				ТОГДА Таблица.Размер
		|			ИНАЧЕ 0
		|		КОНЕЦ) / 1048576 КАК РазмерВТомах,
		|	СУММА(ВЫБОР
		|			КОГДА Таблица.ТипХраненияФайла = ЗНАЧЕНИЕ(Перечисление.ТипыХраненияФайлов.ВИнформационнойБазе)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоВБазе,
		|	СУММА(ВЫБОР
		|			КОГДА Таблица.ТипХраненияФайла = ЗНАЧЕНИЕ(Перечисление.ТипыХраненияФайлов.ВТомахНаДиске)
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоВТомах
		|ИЗ
		|	" + fast8ПолноеИмяМетаданных + " КАК Таблица
		|
		|СГРУППИРОВАТЬ ПО
		|	ТИПЗНАЧЕНИЯ(Таблица.Ссылка)";
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТИПЗНАЧЕНИЯ(ДвоичныеДанныеФайлов.Файл) КАК Объект,
		|	СУММА(ДвоичныеДанныеФайлов.Файл.Размер) / 1048576 КАК РазмерВБазе,
		|	СУММА(1) КАК КоличествоВБазе,
		|	""Не анализируется"" КАК КоличествоВТомах,
		|	""Не анализируется"" КАК РазмерВТомах
		|ИЗ
		|	РегистрСведений.ДвоичныеДанныеФайлов КАК ДвоичныеДанныеФайлов
		|
		|СГРУППИРОВАТЬ ПО
		|	ТИПЗНАЧЕНИЯ(ДвоичныеДанныеФайлов.Файл)";
	КонецЕсли;	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МакетРазмерФайлов = РеквизитФормыВЗначение("Объект").ПолучитьМакет("fast8МакетРазмерФайловБСП");
	ОбластьШапка	= МакетРазмерФайлов.ПолучитьОбласть("Шапка");
		
	fast8РазмерыФайлов.СохранятьСвойстваОтображения = Истина;
	fast8РазмерыФайлов.Вывести(ОбластьШапка);
		
	Пока Выборка.Следующий() Цикл
		ОбластьСтрока	= МакетРазмерФайлов.ПолучитьОбласть("Строка");
		ОбластьСтрока.Параметры.Заполнить(Выборка);
		
		ОбъектМетаданных = Метаданные.НайтиПоТипу(Выборка.Объект);
		ОбластьСтрока.Параметры.Объект = ?(ОбъектМетаданных = Неопределено, "", ОбъектМетаданных.ПолноеИмя());
		
		fast8РазмерыФайлов.Вывести(ОбластьСтрока);
	КонецЦикла;
		
КонецПроцедуры // ЗаполнитьРазмерыФайлов()

&НаСервере
Функция СтрокаНачинаетсяС(ИсходнаяСтрока, Вхождение)
	
	// СтрНачинаетсяС
	
	Возврат (Лев(ИсходнаяСтрока, СтрДлина(Вхождение)) = Вхождение);
	
КонецФункции // СтрокаНачинаетсяС()

#КонецОбласти // СлужебныейПроцедурыИФункции